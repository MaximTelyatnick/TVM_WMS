<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="unitValidationProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAIkFAACJBQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHBsfARgXGgUTEhUIDw4QCqmpp++0tLL/uLi2/7i4t/+5ubf/ubm3/7m5
        t/+5ubf/ubm3/7m5t/+5ubf/ubm3/7m5t/+5ubf/ubm3/7m5t/+5ubf/ubm3/7m5t/+5ubf/uLi3/7i4
        tv+0tLP/qain7wAAAAsAAAAIAAAABQAAAAIAAAAAAAAAAAAAAAAAAAAAtLW0/8jIx//MzMz/zc3M/83O
        zf/Nzs3/zc7N/83Ozf/Nzs3/zc7N/83Ozf/Nzs3/zc7N/83Ozf/Nzs3/zc7N/83Ozf/Nzs3/zc7N/83O
        zf/Nzcz/zc3M/8nJyP+1trX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6urr/zc7O/+Xl
        5f/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly
        8v/y8vL/8vLy//Ly8v/l5eX/zs/P/7q7u/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALy+
        vv/P0dL/8vLy////////////////////////////////////////////////////////////////////
        //////////////////////////////Ly8v/P0dL/vL6+/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEOf
        cO9HqXb/Sa15/0muev9Jrnr/Sa56/0muev9Jrnr/Sa56/0muev9Jrnr/Sa56/0muev9Jrnr/Sa56/0mu
        ev9Jrnr/Sa56/0muev9Jrnr/Sa56/0muev9Jrnr/Sa56/0muev9JrXn/R6p3/0OfcO8AAAAAAAAAAAAA
        AAAAAAAAYLSN/2rHnP9tzaD/bc6h/23Oof9tzqH/bc6h/23Oof9tzqH/bc6h/23Oof9tzqH/bc6h/23O
        of9tzqH/bc6h/23Oof9tzqH/bc6h/23Oof9tzqH/bc6h/23Oof9tzqH/bc6h/23NoP9qyJz/YLWO/wAA
        AAAAAAAAAAAAAAAAAAB1vZ//gdCw/3jBpP+F2Lb/eMKk/4bYtv94wqT/hti2/3jCpP+G2Lb/eMKk/4bY
        tv94wqT/hti2/3jCpP+G2Lb/eMKk/4bYtv94wqT/hti2/3jCpP+G2Lb/eMKk/4bYtv94wqT/hde2/3S8
        n/92v6L/AAAAAAAAAAAAAAAAAAAAAIC5pu+JxbH/frWj/4zKtv9/tqT/jcq2/3+2pP+Nyrb/f7ak/43K
        tv9/tqT/jcq2/3+2pP+Nyrb/f7ak/43Ktv9/tqT/jcq2/3+2pP+Nyrb/f7ak/43Ktv9/tqT/jcq2/362
        o/+MybX/e7Gf/4K8qO8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCx8v/1tzg//Ly8v//////////////
        /////////////yGW0f8TmNv/FJvg/xSd4f8UneH/FJ3h/xSd4f8UneH/FJ3h/xSd4f8UneH/FJzh/xSa
        3v8Tl9n/EpHQ/0aaxf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPJzf/X3uP/8vLy////
        ////////////////////////Epvc/xSr8/8Vr/j/FbD5/xWw+f8VsPn/FbD5/xWw+f8VsPn/FbD5/xWw
        +f8Vr/n/FK73/xOl6v8em9b/uMXN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxcvQ/9ng
        5v/y8vL///////////////////////////8RoeH/E7L5/xO0+/8TtPv/E7T7/xO0+/8TtPv/E7T7/xO0
        +/8TtPv/E7T7/xO0+/8Ssvj/EaPj/7PR4f/FzND/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADGzNL/2uLo//Ly8v///////////////////////////w+l4/8Rtvr/Ebf8/xG3+/8QsfT/D6np/xCt
        7v8Rtvr/Ebf8/xG3/P8Rt/z/Ebb7/xCt7v+YzeT/2uLo/8bN0v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMfN0//b4+n/8vLy////////////////////////////Dajj/w+5+/8Puvz/DrTz/4bQ
        7v//////7/j8/zvB9P8Puvz/D7r8/w+6/P8OsvH/aMPn//Ly8v/b4+n/x87T/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAx87T/9zj6f/y8vL///////////////////////////8LquT/Dbz8/w29
        /f8Mruj///////////+j3vP/DLj2/w29/f8Nvf3/DLn3/zm45v//////8vLy/9zj6f/IztP/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIz9T/3eTq//Ly8v///////////////////////////wmt
        5P8Lv/z/C8D8/wqv5///////wej1/wq17v8LwPz/C8D9/wu9+f8Zsub/7/j8///////y8vL/3eTq/8nP
        1P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMnP1P/e5er/8vLy////////////////////
        ////////CLDl/wnC/f8Jw/7/CLXr/+Dz+v8Xt+j/CcL7/wnD/v8Jwvz/CLTp/9Dt9v////////////Ly
        8v/e5er/ytDV/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAytDV/9/m6//y8vL/////////
        //////////////////8Gs+X/B8X9/wfG/v8Hw/r/FsL0/wfF/P8Hxv7/B8X9/wa88P+h3/L/////////
        ////////8vLy/9/m6//L0NX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADL0dX/4Obr//Ly
        8v///////////////////////////wW25v8GyP7/Bsn//wbJ//8Gyf//Bsn//wbJ/v8GwfT/Yszo////
        ///////////////////y8vL/4Obr/8zR1f8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzR
        1f/h5+v/8vLy////////////////////////////Ebjm/xPL/v8TzP//E8z//xPM//8TzP//Esj5/zzD
        6P////////////////////////////Ly8v/h5+z/zdLW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAzNHV/97j5//f39//5eXl/+Xl5f/l5eX/5eXl/+Xl5f8gu+b/I87+/yPP//8jz///I8///yPM
        +/8qvOT/1+Di/+Xl5f/l5eX/5eXl/+Xl5f/l5eX/39/f/+Ln7P/M0tb/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADIzdH/3uPn/+Lo7P/j6Oz/4+nt/+Pp7f/j6e3/4+nt/y695v8z0f7/NNL//zTS
        //8z0f3/L8Lq/8Dd6P/j6e3/4+nt/+Pp7f/j6e3/4+nt/+Po7P/i6Oz/3uTo/8vQ1P8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAL3Bxe/JztL/ztLW/8/T1//P09f/z9PX/8/T1//P09f/PcDm/0PU
        /f9E1f//Q9T+/0DK8f+Ux9f/z9PX/8/T1//P09f/z9PX/8/T1//P09f/z9PX/87S1v/Kz9L/wMTI7wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABLwuX/U9f9/1TY/v9Qz/T/RrnbnwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFnE4/9i1/r/YdT3/1jC4s8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZcLe/2zQ7v9mxeHvWrbSDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvtf/c8Lc/2m30C8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm+b/D3m6z/93udBfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACf5v8PfbTHbwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////8AAAAA8AAAD/AAAA/wAAAPwAAAA8AAAAPAAAADwAAAA/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP//B////w
        ////8P////H////j////5/////////////8=
</value>
  </data>
</root>