<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="userValidationProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AAAAAFI9LEKOuWxX/zYdH/9qZ
        XP/io2b/4aJl/+GiZf/homX/4aJl/+GiZf/homX/4aJl/+GiZf/io2b/2plc/82HR/+uWxX/j0sQowAA
        ABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAAAAWsV8Y/9yg
        aP/hpWn/3pxa/9yZWP/cmVj/3JlY/9yZV//cmFb/3JhW/9yZV//cmVj/3JlY/9yZWP/enFr/4aVq/9yg
        aP+xXxj/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA
        ABa4aCH/6LmM/+KiYP/homH/4aJi/+GiYv/homH/4aBf/+GfXP/hn1z/4aBf/+GiYf/homL/4aJi/+Gi
        Yf/iomD/6LmM/7VlHf8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAFseAP//qwp3/5qpp/+ara//mq2z/5qts/+apaf/mpmL/7NrG/+rYw//mpmP/5qpp/+ar
        bP/mq2z/5qtr/+arav/sw57/vGkh/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wAAAAAWy4ZG/+7Nrv/qsnP/6rN1/+qzdv/qsnT/6q9u/+7Oqv/w9vv/6/H1/+jI
        pP/qsG//6rJ0/+qzdv/qs3X/6rJz//DPsf/FcCX/AAAAJwAAABYAAAAWAAAAFgAAABYAAAAWAAAAFQAA
        AA8AAAAHAAAAAgAAAAAAAAAA////AAAAABPQj1H/8tnD//C6e//vu37/77t+/++5ev/yx5f/9/z///Hy
        8v/t7uz/5uvt/+3Dkv/wunv/77x+/++7fv/wu3v/9dvF/9J3Kf8AAABIAAAAQwAAAEMAAABDAAAAQwAA
        AEMAAABAAAAANQAAACIAAAAPAAAAAwAAAAD///8AAAAACc2FPv/14c//9Nq7//TDiP/1wYL/9siO//7+
        /v/9/Pn/+vby//by7f/w7ur/5+bj//bGjf/2woP/9MSI//XZu//64c7/334v/yV9b/8xf2z/NH5r/zR+
        a/80fmv/NH5r/zR/a/8ucmHRIE1BegAAACkAAAAMAAAAAP///wAAAAACv306Y9iZW//y3cr/+e7j//nb
        t////PT/y+Py/5XA1/+Dssn/eKnB/3eju/+kv8v/6ODU//zeuf/77uP/+NzI/+iXVv99m2b/RqmB/02p
        gP9OqX//Tql//06pf/9OqX//Tqp//0ide/85iHD/K2tbowAAABQAAAAA////AAAAAAAAAAABxYNBTdSL
        Qfjirnn/8te9//////9ytNf/bqzK/2CYtv9QhqT/P3iW/yBbff/q6+v/+tm+/+6tdv/QjEP/a5pm/zeh
        ef8+oXj/QKB3/0Cgdv9BoHf/QaF3/0Ghd/9Conf/TKl//16zjf8zg3D/AAAAFgAAAAD///8AAAAAAAAA
        AAAAAAAAAAAAAtGNSF/dkkTh8qFU/3m63P9onrf/WIig/0p5kv87aYL/I1Z1//6oW//UmlP/dZ5n/zKl
        ff86pn3/P6Z8/z6kev86o3f/OqN3/z+kev9Bpnz/QqZ8/0Gme/8/pHn/ccCd/zGDcf8AAAAWAAAAAP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAABgAAACBUb3/QfrHL/3e32P9ystP/bqrO/2ShxP87cI//apCT/3XN
        rP82qn7/PquA/0CrgP8+qX7/NaZ4/67Wxf+s1MH/NaZ5/z+qfv9Cq4D/Qat//z2pff+Czaz/MIRy/wAA
        ABYAAAAA////AAAAAAAAAAAAAAAAAAAAAAEAAAASEys8SlKTvP+Gyez/fr3e/3e11v9wrs//a6jJ/2Sg
        xP9Ig6v/h862/zyxgP9AsYL/QLCC/ziufv90xKL///n8///y8/9vv53/Oa9//0Cxg/8/sIL/Oq5//5LY
        u/8vhnP/AAAAEwAAAAD///8AAAAAAAAAAAAAAAAAAAAABwAAACMlWILcfL3g/47O7v+CwuP/fLvb/3Wz
        1P9vrM3/a6fI/1uTuf9DeZn/Zs2g/zy2hP86tIP/QLeF/////f//+fb//PPv//Ts5v9Bt4b/PLWE/zqz
        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
</value>
  </data>
</root>